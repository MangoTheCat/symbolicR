% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00symbolic.000general.R
\name{symbolic.match0}
\alias{symbolic.match0}
\title{symbolic.match0}
\usage{
symbolic.match0(pat, e0)
}
\arguments{
\item{pat}{: pattern expression}

\item{e0}{: expression to be matched against}
}
\value{
an environment if matched, containing the dictionary of matched variables, or \code{NULL} if not matched
}
\description{
working horse for symbolic matcher, match a pattern expression against a given expression
}
\details{
A pattern is a expression might have one or more pattern variables,\cr
pattern variable are as \code{'?'(x)}, \code{'?'(y)} , e.t.c\cr
note \code{'??'(x)} is equivlent to \code{'?'(x)}\cr
also \code{'?a'(x)} can test an atomic term and \code{'?s'(x)} can be used to test a symbol term

Question mark with type-tester, e.g. \cr
       \code{'?'(is.atomic,A)} to match \code{A} if \code{A} is atomic, \cr
       \code{'?'(is.symbol,A)} to match \code{A} if \code{A} is symbol, \cr
       \code{'?'(is.numeric,A)} to match \code{A} if \code{A} is numeric, \cr
       \code{'?'(is.integer,A)} to match \code{A} if \code{A} is integer, \cr
       \code{'?'(is.character,A)} to match \code{A} if \code{A} is character, \cr
       \code{'?'(is.call,A)} to match \code{A} if \code{A} is call
}
\examples{
  symbolic.match0( quote( '?'(A) * exp(ETA[ '?'(B) ])), quote(  TVKA  * exp(ETA[ 2 ] ) ))
  # will return : env (dictionary, { A: TVKA, B:2 } )
}
\seealso{
\code{\link{symbolic.match}}
}
\author{
jjxie
}
