% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00symbolic.000general.R
\name{symbolic.simplify.gigo}
\alias{symbolic.simplify.gigo}
\title{symbolic.simplify.gigo}
\usage{
symbolic.simplify.gigo(rules)
}
\arguments{
\item{rules}{list of pairs of which defines transforming rules}
}
\value{
a closure (R function) for doing the transformation (simplification) accordings to the given rules
}
\description{
Garbage-in-Garbage-out symbolic simplifier factory \cr
It takes in rules, and according the rules, generated an simplifier, which can operate on a given expression, \cr
doing transformations described by rules, and continue on trying the rules on the transformed expression, \cr
until no rules applied. \cr
}
\details{
rules should be list of pairs as following:
\verb{
                 [ [ lhs1, rhs1 ],
                  [ lhs2, rhs2 ],
                     ...,
                   ] }
Here, lhs should be a pattern with pattern expression \cr
rhs has two possibilities: 
\enumerate{
        \item  skeleton with \code{':'(x)}
        \item  a callback function takes in \code{e} (mathed expression) and dictionary (matched variable)
             like \code{function(e,dict) { do something on using e or dict} }
 }
}
\seealso{
\code{\link{simplify.03}}, \code{\link{character.rules.to.list.rules}}
}
\author{
jjxie
}
